package models

func ConvertToModelActionToCharacter(action Action) Character {
	character := Character{
		Name:                 action.Data.Character.Name,
		Skin:                 action.Data.Character.Skin,
		Level:                action.Data.Character.Level,
		Xp:                   action.Data.Character.Xp,
		MaxXp:                action.Data.Character.MaxXp,
		Gold:                 action.Data.Character.Gold,
		Speed:                action.Data.Character.Speed,
		MiningLevel:          action.Data.Character.MiningLevel,
		MiningXp:             action.Data.Character.MiningXp,
		MiningMaxXp:          action.Data.Character.MiningMaxXp,
		WoodcuttingLevel:     action.Data.Character.WoodcuttingLevel,
		WoodcuttingMaxXp:     action.Data.Character.WoodcuttingMaxXp,
		FishingLevel:         action.Data.Character.FishingLevel,
		FishingXp:            action.Data.Character.FishingXp,
		FishingMaxXp:         action.Data.Character.FishingMaxXp,
		WeaponcraftingLevel:  action.Data.Character.WeaponcraftingLevel,
		WeaponcraftingXp:     action.Data.Character.WeaponcraftingXp,
		WeaponcraftingMaxXp:  action.Data.Character.WeaponcraftingMaxXp,
		GearcraftingLevel:    action.Data.Character.GearcraftingLevel,
		GearcraftingXp:       action.Data.Character.GearcraftingXp,
		GearcraftingMaxXp:    action.Data.Character.GearcraftingMaxXp,
		JewelrycraftingLevel: action.Data.Character.JewelrycraftingLevel,
		JewelrycraftingXp:    action.Data.Character.JewelrycraftingXp,
		JewelrycraftingMaxXp: action.Data.Character.JewelrycraftingMaxXp,
		CookingLevel:         action.Data.Character.CookingLevel,
		CookingXp:            action.Data.Character.CookingXp,
		CookingMaxXp:         action.Data.Character.CookingMaxXp,
		Hp:                   action.Data.Character.Hp,
		Haste:                action.Data.Character.Haste,
		CriticalStrike:       action.Data.Character.CriticalStrike,
		Stamina:              action.Data.Character.Stamina,
		AttackFire:           action.Data.Character.AttackFire,
		AttackEarth:          action.Data.Character.AttackEarth,
		AttackWater:          action.Data.Character.AttackWater,
		AttackAir:            action.Data.Character.AttackAir,
		DmgFire:              action.Data.Character.DmgFire,
		DmgEarth:             action.Data.Character.DmgEarth,
		DmgWater:             action.Data.Character.DmgWater,
		DmgAir:               action.Data.Character.DmgAir,
		ResFire:              action.Data.Character.ResFire,
		ResEarth:             action.Data.Character.ResEarth,
		ResWater:             action.Data.Character.ResWater,
		ResAir:               action.Data.Character.ResAir,
		X:                    action.Data.Character.X,
		Y:                    action.Data.Character.Y,
		Cooldown:             action.Data.Character.Cooldown,
		CooldownExpiration:   action.Data.Character.CooldownExpiration,
		WeaponSlot:           action.Data.Character.WeaponSlot,
		ShieldSlot:           action.Data.Character.ShieldSlot,
		HelmetSlot:           action.Data.Character.HelmetSlot,
		BodyArmorSlot:        action.Data.Character.BodyArmorSlot,
		LegArmorSlot:         action.Data.Character.LegArmorSlot,
		BootsSlot:            action.Data.Character.BootsSlot,
		Ring1Slot:            action.Data.Character.Ring1Slot,
		Ring2Slot:            action.Data.Character.Ring2Slot,
		AmuletSlot:           action.Data.Character.AmuletSlot,
		Artifact1Slot:        action.Data.Character.Artifact1Slot,
		Artifact2Slot:        action.Data.Character.Artifact2Slot,
		Artifact3Slot:        action.Data.Character.Artifact3Slot,
		Utility1Slot:         action.Data.Character.Utility1Slot,
		Utility1SlotQuantity: action.Data.Character.Utility1SlotQuantity,
		Utility2Slot:         action.Data.Character.Utility2Slot,
		Utility2SlotQuantity: action.Data.Character.Utility2SlotQuantity,
		Task:                 action.Data.Character.Task,
		TaskType:             action.Data.Character.TaskType,
		TaskProgress:         action.Data.Character.TaskProgress,
		TaskTotal:            action.Data.Character.TaskTotal,
		InventoryMaxItems:    action.Data.Character.InventoryMaxItems,
		MaxHp:                action.Data.Character.MaxHp,
		Inventory:            make([]InventoryItem, len(action.Data.Character.Inventory)),
	}

	for i, item := range action.Data.Character.Inventory {
		character.Inventory[i] = InventoryItem{
			Slot:     item.Slot,
			Code:     item.Code,
			Quantity: item.Quantity,
		}
	}

	return character
}

func ConvertFightToModelCharacter(action Fight) Character {
	character := Character{
		Name:                 action.Data.Character.Name,
		Skin:                 action.Data.Character.Skin,
		Level:                action.Data.Character.Level,
		Xp:                   action.Data.Character.Xp,
		MaxXp:                action.Data.Character.MaxXp,
		Gold:                 action.Data.Character.Gold,
		Speed:                action.Data.Character.Speed,
		MiningLevel:          action.Data.Character.MiningLevel,
		MiningXp:             action.Data.Character.MiningXp,
		MiningMaxXp:          action.Data.Character.MiningMaxXp,
		WoodcuttingLevel:     action.Data.Character.WoodcuttingLevel,
		WoodcuttingMaxXp:     action.Data.Character.WoodcuttingMaxXp,
		FishingLevel:         action.Data.Character.FishingLevel,
		FishingXp:            action.Data.Character.FishingXp,
		FishingMaxXp:         action.Data.Character.FishingMaxXp,
		WeaponcraftingLevel:  action.Data.Character.WeaponcraftingLevel,
		WeaponcraftingXp:     action.Data.Character.WeaponcraftingXp,
		WeaponcraftingMaxXp:  action.Data.Character.WeaponcraftingMaxXp,
		GearcraftingLevel:    action.Data.Character.GearcraftingLevel,
		GearcraftingXp:       action.Data.Character.GearcraftingXp,
		GearcraftingMaxXp:    action.Data.Character.GearcraftingMaxXp,
		JewelrycraftingLevel: action.Data.Character.JewelrycraftingLevel,
		JewelrycraftingXp:    action.Data.Character.JewelrycraftingXp,
		JewelrycraftingMaxXp: action.Data.Character.JewelrycraftingMaxXp,
		CookingLevel:         action.Data.Character.CookingLevel,
		CookingXp:            action.Data.Character.CookingXp,
		CookingMaxXp:         action.Data.Character.CookingMaxXp,
		Hp:                   action.Data.Character.Hp,
		Haste:                action.Data.Character.Haste,
		CriticalStrike:       action.Data.Character.CriticalStrike,
		Stamina:              action.Data.Character.Stamina,
		AttackFire:           action.Data.Character.AttackFire,
		AttackEarth:          action.Data.Character.AttackEarth,
		AttackWater:          action.Data.Character.AttackWater,
		AttackAir:            action.Data.Character.AttackAir,
		DmgFire:              action.Data.Character.DmgFire,
		DmgEarth:             action.Data.Character.DmgEarth,
		DmgWater:             action.Data.Character.DmgWater,
		DmgAir:               action.Data.Character.DmgAir,
		ResFire:              action.Data.Character.ResFire,
		ResEarth:             action.Data.Character.ResEarth,
		ResWater:             action.Data.Character.ResWater,
		ResAir:               action.Data.Character.ResAir,
		X:                    action.Data.Character.X,
		Y:                    action.Data.Character.Y,
		Cooldown:             action.Data.Character.Cooldown,
		CooldownExpiration:   action.Data.Character.CooldownExpiration,
		WeaponSlot:           action.Data.Character.WeaponSlot,
		ShieldSlot:           action.Data.Character.ShieldSlot,
		HelmetSlot:           action.Data.Character.HelmetSlot,
		BodyArmorSlot:        action.Data.Character.BodyArmorSlot,
		LegArmorSlot:         action.Data.Character.LegArmorSlot,
		BootsSlot:            action.Data.Character.BootsSlot,
		Ring1Slot:            action.Data.Character.Ring1Slot,
		Ring2Slot:            action.Data.Character.Ring2Slot,
		AmuletSlot:           action.Data.Character.AmuletSlot,
		Artifact1Slot:        action.Data.Character.Artifact1Slot,
		Artifact2Slot:        action.Data.Character.Artifact2Slot,
		Artifact3Slot:        action.Data.Character.Artifact3Slot,
		Utility1Slot:         action.Data.Character.Utility1Slot,
		Utility1SlotQuantity: action.Data.Character.Utility1SlotQuantity,
		Utility2Slot:         action.Data.Character.Utility2Slot,
		Utility2SlotQuantity: action.Data.Character.Utility2SlotQuantity,
		Task:                 action.Data.Character.Task,
		TaskType:             action.Data.Character.TaskType,
		TaskProgress:         action.Data.Character.TaskProgress,
		TaskTotal:            action.Data.Character.TaskTotal,
		InventoryMaxItems:    action.Data.Character.InventoryMaxItems,
		Inventory:            make([]InventoryItem, len(action.Data.Character.Inventory)),
	}

	for i, item := range action.Data.Character.Inventory {
		character.Inventory[i] = InventoryItem{
			Slot:     item.Slot,
			Code:     item.Code,
			Quantity: item.Quantity,
		}
	}

	return character
}
