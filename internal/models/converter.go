package models

func ConvertToModelCharacter(action Action) Character {
	character := Character{
		Name:                    action.Data.Character.Name,
		Skin:                    action.Data.Character.Skin,
		Level:                   action.Data.Character.Level,
		XP:                      action.Data.Character.Xp,
		MaxXp:                   action.Data.Character.MaxXp,
		TotalXp:                 action.Data.Character.TotalXp,
		Gold:                    action.Data.Character.Gold,
		Speed:                   action.Data.Character.Speed,
		MiningLevel:             action.Data.Character.MiningLevel,
		MiningXp:                action.Data.Character.MiningXp,
		MiningMaxXp:             action.Data.Character.MiningMaxXp,
		WoodcuttingLevel:        action.Data.Character.WoodcuttingLevel,
		WoodcuttingMaxXp:        action.Data.Character.WoodcuttingMaxXp,
		FishingLevel:            action.Data.Character.FishingLevel,
		FishingXp:               action.Data.Character.FishingXp,
		FishingMaxXp:            action.Data.Character.FishingMaxXp,
		WeaponCraftingLevel:     action.Data.Character.WeaponcraftingLevel,
		WeaponCraftingXp:        action.Data.Character.WeaponcraftingXp,
		WeaponCraftingMaxXp:     action.Data.Character.WeaponcraftingMaxXp,
		GearCraftingLevel:       action.Data.Character.GearcraftingLevel,
		GearCraftingXp:          action.Data.Character.GearcraftingXp,
		GearCraftingMaxXp:       action.Data.Character.GearcraftingMaxXp,
		JewelryCraftingLevel:    action.Data.Character.JewelrycraftingLevel,
		JewelryCraftingXp:       action.Data.Character.JewelrycraftingXp,
		JewelryCraftingMaxXp:    action.Data.Character.JewelrycraftingMaxXp,
		CookingLevel:            action.Data.Character.CookingLevel,
		CookingXp:               action.Data.Character.CookingXp,
		CookingMaxXp:            action.Data.Character.CookingMaxXp,
		Hp:                      action.Data.Character.Hp,
		Haste:                   action.Data.Character.Haste,
		CriticalStrike:          action.Data.Character.CriticalStrike,
		Stamina:                 action.Data.Character.Stamina,
		AttackFire:              action.Data.Character.AttackFire,
		AttackEarth:             action.Data.Character.AttackEarth,
		AttackWater:             action.Data.Character.AttackWater,
		AttackAir:               action.Data.Character.AttackAir,
		DmgFire:                 action.Data.Character.DmgFire,
		DmgEarth:                action.Data.Character.DmgEarth,
		DmgWater:                action.Data.Character.DmgWater,
		DmgAir:                  action.Data.Character.DmgAir,
		ResFire:                 action.Data.Character.ResFire,
		ResEarth:                action.Data.Character.ResEarth,
		ResWater:                action.Data.Character.ResWater,
		ResAir:                  action.Data.Character.ResAir,
		X:                       action.Data.Character.X,
		Y:                       action.Data.Character.Y,
		Cooldown:                action.Data.Character.Cooldown,
		CooldownExpiration:      action.Data.Character.CooldownExpiration,
		WeaponSlot:              action.Data.Character.WeaponSlot,
		ShieldSlot:              action.Data.Character.ShieldSlot,
		HelmetSlot:              action.Data.Character.HelmetSlot,
		BodyArmorSlot:           action.Data.Character.BodyArmorSlot,
		LegArmorSlot:            action.Data.Character.LegArmorSlot,
		BootsSlot:               action.Data.Character.BootsSlot,
		Ring1Slot:               action.Data.Character.Ring1Slot,
		Ring2Slot:               action.Data.Character.Ring2Slot,
		AmuletSlot:              action.Data.Character.AmuletSlot,
		Artifact1Slot:           action.Data.Character.Artifact1Slot,
		Artifact2Slot:           action.Data.Character.Artifact2Slot,
		Artifact3Slot:           action.Data.Character.Artifact3Slot,
		Consumable1Slot:         action.Data.Character.Consumable1Slot,
		Consumable1SlotQuantity: action.Data.Character.Consumable1SlotQuantity,
		Consumable2Slot:         action.Data.Character.Consumable2Slot,
		Consumable2SlotQuantity: action.Data.Character.Consumable2SlotQuantity,
		Task:                    action.Data.Character.Task,
		TaskType:                action.Data.Character.TaskType,
		TaskProgress:            action.Data.Character.TaskProgress,
		TaskTotal:               action.Data.Character.TaskTotal,
		InventoryMaxItems:       action.Data.Character.InventoryMaxItems,
		Inventory:               make([]InventoryItem, len(action.Data.Character.Inventory)),
	}

	for i, item := range action.Data.Character.Inventory {
		character.Inventory[i] = InventoryItem{
			Slot:     item.Slot,
			Code:     item.Code,
			Quantity: item.Quantity,
		}
	}

	return character
}
